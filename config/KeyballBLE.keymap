#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        line {
            bindings = <&kp LA(ENTER)>;
            key-positions = <40 39>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                 &kp T                                                        &kp Y          &kp U  &lt 5 I    &kp O    &kp MINUS
&kp A             &kp S         &kp D         &kp F                 &kp G        &mkp LCLK                    &kp LEFT_BRACKET   &kp H          &kp J  &kp K      &kp L    &kp P
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                 &kp B        &kp CAPS                     &kp RIGHT_BRACKET  &kp N          &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT EXCL
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 TAB  &lt 3 SPACE  &lt_to_layer_0 2 DELETE      &kp ENTER          &kp BACKSPACE                             &kp SLASH
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        ARROWandNUM {
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                     &kp NUMBER_6    &kp N7          &kp N8           &kp N9  &kp N0
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5   &none      &none  &none           &kp UP_ARROW    &none            &none   &none
&kp F6        &kp F7        &kp F8        &kp F9        &kp F10  &to 7      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &none
&kp F11       &kp F12       &none         &none         &none    &none      &none  &none                                                    &none
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&none   &none  &none   &none  &none                         &none      &none      &none      &none  &none
&none   &none  &none   &none  &none  &kp LC(C)      &none   &kp LC(C)  &mkp LCLK  &mkp RCLK  &none  &none
&trans  &none  &none   &none  &none  &kp LC(V)      &none   &kp LC(V)  &none      &none      &none  &none
&trans  &none  &trans  &none  &none  &none          &trans  &trans                                  &none
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };

        layer_7 {
            bindings = <
&none      &none          &kp LC(H)  &none      &to 0                                   &none           &none            &none  &none  &none
&none      &kp LC(SLASH)  &kp LC(D)  &kp V      &kp B          &none             &none  &none           &kp DELETE       &none  &none  &kp RBKT
&none      &none          &kp I      &kp LC(W)  &kp LC(LA(F))  &kp LEFT_ALT      &none  &kp LEFT_ARROW  &kp RIGHT_ARROW  &none  &none  &kp LBKT
&kp LC(Z)  &kp SPACE      &none      &kp L      &kp LC(SPACE)  &kp ENTER         &none  &kp Z                                          &none
            >;

            sensor-bindings = <&inc_dec_kp RBKT LBKT>;
        };
    };
};
